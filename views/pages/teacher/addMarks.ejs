<!DOCTYPE html>
<html>
<title>Teacher Dasboard</title>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Raleway">
<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">   
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.16.2/xlsx.full.min.js"></script>
<style>

body,h1,h2,h3,h4,h5 {font-family: "Raleway", sans-serif}
.add-icon{
    position: fixed;
    bottom: 2.5%;
    right: 2.5%;
    z-index: 2; 
}

/* Add padding to containers */
.container {
  padding: 16px;
  background-color: white;
}

.material-icons
{
    font-size: 4rem; 
    color: cadetblue;
    cursor: pointer;
}
button
{
   background-color: transparent;
   border: none;

}
* {
  box-sizing: border-box;
}
.rounded{
  border-radius: 7px;
}
/* Full-width input fields */
input[type=text], input[type=password], input[type=number], input[type=week],select {
  width: 100%;
  padding: 15px;
  margin: 5px 0 22px 0;
  display: inline-block;
  border: none;
  background: #f1f1f1;
  border-radius: 7px;
}

input[type=text]:focus, input[type=password]:focus, input[type=number]:focus, input[type=week]:focus, select:focus{
  background-color: #ddd;
  outline: none;
}

/* Overwrite default styles of hr */
hr {
  border: 1px solid #f1f1f1;
  margin-bottom: 25px;
}

/* Set a style for the submit button */
.registerbtn {
  background-color: #04AA6D;
  color: white;
  padding: 16px 20px;
  margin: 8px 0;
  border: none;
  cursor: pointer;
  width: 100%;
  opacity: 0.9;
}

.closebtn {
  margin-left: 15px;
  color: white;
  font-weight: bold;
  float: right;
  font-size: 22px;
  line-height: 20px;
  cursor: pointer;
  transition: 0.3s;
}

.closebtn:hover {
  color: black;
}

.registerbtn:hover {
  opacity: 1;
}
a {
  color: dodgerblue;
}
.signin {
  background-color: #f1f1f1;
  text-align: center;
  appearance: none;
}

.media-body
{ 
  color: #04AA6D;
  text-decoration: none;
}
.btn-user:hover
{
  text-decoration:  none;
} 
.alert {
  padding: 20px;
  background-color: #f44336;
  color: white;
}

</style>

<body class="w3-light-grey">
  <div class="add-icon">
    <button onclick="newCourse();" >
        <span class="material-icons">
            add_circle
        </span>
    </button>
  </div>
      <div id="id01" class="w3-modal">
        <div class="w3-modal-content w3-card-4">
          <form id="course_form" onsubmit="formSubmitHandler(event);">
              <header class="w3-container w3-teal">
                <span onclick="document.getElementById('id01').style.display='none'"
                class="w3-button w3-display-topright w3-xlarge">&times;</span>
                <h2 id="form-title">COURSE CREATION</h2>
              </header>
              <div class="container">
                <label for="course_name"><b>Course Name</b></label>
                <input type="text" placeholder="Course Name" name="course_name" id="course_name" required>
                <!-- <label for="Course Id"><b>Course Id</b></label>
                <input type="text" placeholder="Course Id" value="NA" name="course_id" required> -->
                <label for="about"><b>Description</b></label>
                <input type="text" placeholder="Course Description" name="about" id="about" required>
                <label for="credits"><b>Credits</b></label>
                <input type="number" placeholder="Course Credits" name="credits" id="credits" required>
                <label for="sem"><b>Semester</b></label>
                <input type="number" placeholder="Semester" name="sem" id="sem" required>
                <label for="Fees"><b>Fees</b></label>
                <input type="number" placeholder="Fees" name="fees" required>
                <label for="maxcount"><b>Maximum Capacity</b></label>
                <input type="number" placeholder="Capacity" name="count" required>
                <label for="faculty_type"><b>Faculty-type</b></label>
                <div class="w3-row-padding ">
                  <p class=" w3-half">
                    <input class="w3-radio" type="radio" name="type" value="internal" checked>
                    <label>Internal</label></p>
                    <p  class=" w3-half">
                    <input class="w3-radio" type="radio" name="type" value="external">
                    <label>External</label></p>
                </div>
                <label for="duration"><b>Duration</b></label>
                <select name="weeksDuration" id="duration">
                  <option value="1">1</option>
                  <option value="2">2</option>
                  <option value="3">3</option>
                </select>
                <button type="submit" id="form-button" class="registerbtn rounded">Submit</button>
              </div>
              
              <footer class="w3-container w3-teal">
                <p>please verify before submission</p>
              </footer>
          </form>
        </div>
      </div>
  <!-- ////////alert -->
  <div class="alert" id="aler" >
    <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> 
    <div id="text"></div> 
  </div>

<div class="w3-bar w3-black w3-padding-large">
  <a href="/" class="w3-bar-item w3-button rounded"><b>TEACHERS DASHBOARD</b></a> 
  <div class="w3-dropdown-hover w3-right">
    <button class="w3-button w3-black"><b><%= email %></b></button>
    <img class="mr-2 w3-circle" src="/img/avatar.jpg" width="40" height="40" alt="avatar">
   
    <div class="w3-dropdown-content w3-bar-block w3-border" style="right:0">
      <a onclick="document.getElementById('edit-profile').style.display='block'" class="w3-bar-item w3-button w3-padding-large">Edit profile</a>
      <!-- #region for edit profile of user--> 
        <div id="edit-profile" class="w3-modal">
          <div class="w3-modal-content w3-card-4">
            <form action="#">
                <header class="w3-container w3-teal">
                  <span onclick="document.getElementById('edit-profile').style.display='none'"
                  class="w3-button w3-display-topright w3-xlarge">&times;</span>
                  <h2>EDIT PROFILE</h2>
                </header>
                <div class="container">
                  <label for="name"><b>Username</b></label>
                  <input type="text" value="current_name" name="name" id="name" required>
                  <label for="about"><b>Description</b></label>
                  <input type="text" placeholder="Enter course description" name="about" id="about" required> 
                  <button type="submit" class="registerbtn">Edit profile</button>
                </div>                 
            </form>
          </div>
        </div> 
      <a class="w3-bar-item w3-button w3-padding-large" onclick="logoutHandler()">Log out</a> 
    </div>
  </div>

  <div class="w3-clear"></div>
</div>

<!-- #region student details-->
<div class="w3-content" style="max-width:1400px"> 
  <div class="w3-container">
    <h2>ADD MARKS : <%=course_name%></h2>
    <p id="course_code"><%=course_id%></p>

    <!-- make code here
        sheet for updating marks
    -->
    
    <button onclick="downloadModal()" id="download"  class="w3-button w3-blue w3-round">Download model</button> 
    <button type="submit" id="submission" onclick="finish()" class="w3-button w3-round w3-teal w3-right">SUBMIT Â»</button>
    <input id="upload" name="myfile" onchange="preview()" type="file" accept=".xlsx" class="w3-button w3-green w3-round" >
    <button onclick="uploadMarks()" class="w3-button w3-black w3-round">Upload Marks</button>
    <p ><b>**<b>make sure to download the model and add details without affecting the format provided and then upload.</p>
    <table class="w3-table-all w3-margin-top" id="myTable">
      <tr> 
        <th style="width:30%;">Roll No</th>
        <th style="width:30%;">Email</th>
        <th style="width:30%;">Marks</th>
        <th style="width:10%;">Status</th>

      </tr> 
    </table> 

</body>
<script> 
    var msg= "";
    var aler = document.getElementById("aler"); 
    aler.style.display= "none";  
    const text = document.getElementById('text');
    const modal = document.getElementById('id01');
    const modal1 = document.getElementById('edit');
    const modal2 = document.getElementById('edit-profile');
    const table = document.getElementById("myTable");
    const course_code = document.getElementById('course_code').innerHTML; 
     
    window.onclick = function(event) {
      if (event.target == modal || event.target == modal1 || event.target==modal2) {
        modal.style.display = "none";
        modal1.style.display = "none";
        modal2.style.display = "none";
      }
    }

    function formSubmitHandler(event){
      event.preventDefault();
      if(type === 'new')
        courseCreationHandler();
      else if(type === 'edit')
        courseEditHandler();
    }

    const courseCreationHandler = (event) => {
      const course_name = document.querySelector("[name='course_name']").value;
      const about = document.querySelector("[name='about']").value;
      const credits = document.querySelector("[name='credits']").value;
      const sem = document.querySelector("[name='sem']").value;
      const fees = document.querySelector("[name='fees']").value;
      const weeksDuration = document.querySelector("[name='weeksDuration']").value;
      const count = document.querySelector("[name='count']").value;
      const staffType = (document.querySelector("[name='type']").value === "internal")?"0":"1";
      console.log(weeksDuration)
      const data = {
        course_name,about,credits,sem,fees,weeksDuration,count,staffType
      }
      fetch('/course_proposal',{
        method: 'POST',
        headers:{
          'Content-Type': 'application/json'
        },
        body:JSON.stringify(data)
      })
      .then(handleError)
      .then(res => {
        console.log(res) 
        modal.style.display = "none";
        aler.style.display="block"; 
        aler.style.background = "green";
        text.style.display="block"; 
        msg = "<strong>Success </strong>   Course Added Successfully";
        text.innerHTML = msg;
        setTimeout(() => {
          location.reload();
        },2000);
      })
      .catch(err =>{    
        console.log(err) 
        modal.style.display = "none";
        aler.style.display="block"; 
        text.style.display="block"; 
        msg = "<strong>Danger !</strong>    "+err;
        text.innerHTML = msg;
      })

    }

    function newCourse(){
      document.getElementById('id01').style.display='block'
      type = 'new';
      document.getElementById('course_form').reset();
      formButton.innerText = 'Submit';
      formTitle.innerText = 'COURSE CREATION';
    }

    async function handleError(res){
      if(!res.ok){
        res = await res.json()
        throw new Error(res.msg)
      }
      else return res.json()
    }

    function finish(){
      // alert(`${course_code}`)
      fetch(`/course/finish/+${course_code}`)
      .then(handleError)
      .then(res => {
        console.log(res) 
        aler.style.backgroundColor = "green"         
        aler.style.display="block"; 
        text.style.display="block"; 
        text.innerHTML = "<strong>Success!</strong>       "+"Course Updated and Completed Successfully";       

      })
      .catch(err => {
        console.log(err) 
        aler.style.backgroundColor = "red"         
        aler.style.display="block"; 
        text.style.display="block"; 
        text.innerHTML = "<strong>Danger!</strong>       "+"Error : "+err;       

      })
    }
   

    function logoutHandler(){
      fetch('/logout')
      .then(handleError)
      .then(res => {
        window.location.href = "/login"

        // if the flwo comes here then logged out and redirected to login page
      })
      .catch(err => {
        console.log(err);
        console.log(err)
        aler.style.backgroundColor = "red"         
        aler.style.display="block"; 
        text.style.display="block"; 
        text.innerHTML = "<strong>Danger!</strong>       "+"Error : "+err;       

      })
    }

    function downloadModal(){
      window.location.replace("/marks/download/"+course_code);
    }

    function renderTable(students){
      if(students.length===0){
        table.innerHTML = '<div class="w3-card-4 w3-margin w3-white w3-display-middle"><div class="w3-container w3-padding-16 text-center">NO STUDENTS JOINED YET...</div></div>';
      }
      students.forEach((student,i) => {
        let row = table.insertRow(i+1);
        let cell1 = row.insertCell(0);
        let cell2 = row.insertCell(1);
        let cell3 = row.insertCell(2); 
        let cell4 = row.insertCell(3);
        cell1.innerHTML = student.rollno;
        cell2.innerHTML = student.email;
        cell3.innerHTML = student.marks;
        cell4.innerHTML = "--";
      });
    }

    let rowObject = [];
    function getRows(selectedFile,cb){
      if(selectedFile){
        let fileReader = new FileReader();
        fileReader.readAsBinaryString(selectedFile);
        fileReader.onload = (event)=>{
          let data = event.target.result;
          let workbook = XLSX.read(data,{type:"binary"});
          let rowObject = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[workbook.SheetNames[0]]);
          cb(rowObject);
        }
      }
    }

    function preview(){
      const selectedFile = document.getElementById("upload").files[0];
      const rowObject = getRows(selectedFile,renderTable);
    }

    function uploadMarks(){
      const selectedFile = document.getElementById("upload").files[0];
      const rowObject = getRows(selectedFile,(rowObject) => {
        console.log(rowObject);
        const courseCode = '<%-course_id%>'
        const data = {
          students: rowObject,
          course_code
        }
        fetch('/marks/upload',
        {
          method:"post",
          headers:{'Content-Type':"application/json"},
          body:JSON.stringify(data)
        })
        .then(handleError)
        .then(res => {
          console.log(res);
          let responses = res.responses[0];
          const table = document.getElementById("myTable");
          // console.log(table.rows[0].cells);
          responses.map((response,i) => {
            table.rows[i+1].cells[3].textContent = response.status === 'fulfilled'? 'Updated': 'Not Updated'
          })
        })
        .catch(err => {
          console.log(err);
        })
      });
    }
</script>
</html>